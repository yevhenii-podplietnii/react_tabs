{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTab","onTabSelected","className","map","tab","id","title","isSelected","classNames","onClick","href","content","App","useState","selectedTabId","setSelectedTabId","find","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAwB,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,cACzD,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGH,EAAKI,KAAI,SAAAC,GACR,IAAQC,EAAcD,EAAdC,GAAIC,EAAUF,EAAVE,MACNC,EAAaP,EAAYK,KAAOA,EAEtC,OACE,oBAEEH,UAAWM,IAAW,CAAE,YAAaD,IACrC,UAAQ,MAHV,SAKE,mBACEE,QAAS,kBAAOF,GAAcN,EAAcG,IAC5CM,KAAI,WAAML,GACV,UAAQ,UAHV,SAKGC,KATED,UAiBf,qBAAKH,UAAU,QAAQ,UAAQ,aAA/B,SACGF,EAAYW,cChCRZ,EAAc,CACzB,CAAEM,GAAI,QAASC,MAAO,QAASK,QAAS,eACxC,CAAEN,GAAI,QAASC,MAAO,QAASK,QAAS,eACxC,CAAEN,GAAI,QAASC,MAAO,QAASK,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAASd,EAAK,GAAGM,IAA3D,mBAAOS,EAAP,KAAsBC,EAAtB,KACMf,EAAcD,EAAKiB,MAAK,SAAAZ,GAAG,OAAIA,EAAIC,KAAOS,MAAkBf,EAAK,GAIvE,OACE,sBAAKG,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBF,EAAYM,SAGlC,cAAC,EAAD,CACEP,KAAMA,EACNC,YAAaA,EACbC,cAXe,SAACG,GAAD,OAAcW,EAAiBX,EAAIC,WCd1DY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2314be30.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTab: Tab;\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs: React.FC<Props> = ({ tabs, selectedTab, onTabSelected }) => {\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const { id, title } = tab;\n            const isSelected = selectedTab.id === id;\n\n            return (\n              <li\n                key={id}\n                className={classNames({ 'is-active': isSelected })}\n                data-cy=\"Tab\"\n              >\n                <a\n                  onClick={() => !isSelected && onTabSelected(tab)}\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  const handleSelect = (tab: Tab) => setSelectedTabId(tab.id);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTab={selectedTab}\n        onTabSelected={handleSelect}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}